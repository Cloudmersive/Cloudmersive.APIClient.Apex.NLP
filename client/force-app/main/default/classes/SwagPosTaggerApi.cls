/*
 * nlpapiv2
 * The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagPosTaggerApi {
    SwagClient client;

    public SwagPosTaggerApi(SwagClient client) {
        this.client = client;
    }

    public SwagPosTaggerApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Part-of-speech tag a string, filter to adjectives
     * Part-of-speech (POS) tag a string, find the adjectives, and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagAdjectives(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/adjectives',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
    /**
     * Part-of-speech tag a string, filter to adverbs
     * Part-of-speech (POS) tag a string, find the adverbs, and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagAdverbs(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/adverbs',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
    /**
     * Part-of-speech tag a string, filter to nouns
     * Part-of-speech (POS) tag a string, find the nouns, and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagNouns(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/nouns',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
    /**
     * Part-of-speech tag a string, filter to pronouns
     * Part-of-speech (POS) tag a string, find the pronouns, and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagPronouns(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/pronouns',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
    /**
     * Part-of-speech tag a string
     * Part-of-speech (POS) tag a string and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagSentence(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/sentence',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
    /**
     * Part-of-speech tag a string, filter to verbs
     * Part-of-speech (POS) tag a string, find the verbs, and return result as JSON
     * @param request Input string (required)
     * @return SwagPosResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagPosResponse posTaggerTagVerbs(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagPosResponse) client.invoke(
            'POST', '/nlp-v2/pos/tag/verbs',
            (SwagPosRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagPosResponse.class
        );
    }
}
