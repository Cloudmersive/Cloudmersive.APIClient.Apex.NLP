/*
 * nlpapiv2
 * The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Spelling correction check result
 */
public class SwagCheckWordResponse implements Swagger.MappedProperties {
    /**
     * True if the word is spelled correctly, false otherwise
     * @return correct
     */
    public Boolean correct { get; set; }

    /**
     * Suggested spelling corrections
     * @return suggestions
     */
    public List<String> suggestions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Correct' => 'correct',
        'Suggestions' => 'suggestions'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagCheckWordResponse() {
        suggestions = new List<String>();
    }

    public static SwagCheckWordResponse getExample() {
        SwagCheckWordResponse checkWordResponse = new SwagCheckWordResponse();
        checkWordResponse.correct = true;
        checkWordResponse.suggestions = new List<String>{'aeiou'};
        return checkWordResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagCheckWordResponse) {
            SwagCheckWordResponse checkWordResponse = (SwagCheckWordResponse) obj;
            return this.correct == checkWordResponse.correct
                && this.suggestions == checkWordResponse.suggestions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (correct == null ? 0 : System.hashCode(correct));
        hashCode = (17 * hashCode) + (suggestions == null ? 0 : System.hashCode(suggestions));
        return hashCode;
    }
}

