/*
 * nlpapiv2
 * The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagWordPosition
 */
public class SwagWordPosition implements Swagger.MappedProperties {
    /**
     * Word as a string
     * @return word
     */
    public String word { get; set; }

    /**
     * Zero-based index of the word; first word has index 0, second word has index 1 and so on
     * @return wordIndex
     */
    public Integer wordIndex { get; set; }

    /**
     * Zero-based character offset at which the word begins in the input string
     * @return startPosition
     */
    public Integer startPosition { get; set; }

    /**
     * Zero-based character offset at which the word ends in the input string
     * @return endPosition
     */
    public Integer endPosition { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Word' => 'word',
        'WordIndex' => 'wordIndex',
        'StartPosition' => 'startPosition',
        'EndPosition' => 'endPosition'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagWordPosition getExample() {
        SwagWordPosition wordPosition = new SwagWordPosition();
        wordPosition.word = 'aeiou';
        wordPosition.wordIndex = 123;
        wordPosition.startPosition = 123;
        wordPosition.endPosition = 123;
        return wordPosition;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagWordPosition) {
            SwagWordPosition wordPosition = (SwagWordPosition) obj;
            return this.word == wordPosition.word
                && this.wordIndex == wordPosition.wordIndex
                && this.startPosition == wordPosition.startPosition
                && this.endPosition == wordPosition.endPosition;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (word == null ? 0 : System.hashCode(word));
        hashCode = (17 * hashCode) + (wordIndex == null ? 0 : System.hashCode(wordIndex));
        hashCode = (17 * hashCode) + (startPosition == null ? 0 : System.hashCode(startPosition));
        hashCode = (17 * hashCode) + (endPosition == null ? 0 : System.hashCode(endPosition));
        return hashCode;
    }
}

