/*
 * nlpapiv2
 * The powerful Natural Language Processing APIs (v2) let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of spell checking a sentence
 */
public class SwagCheckSentenceResponse implements Swagger.MappedProperties {
    /**
     * Number of incorrect words
     * @return incorrectCount
     */
    public Integer incorrectCount { get; set; }

    /**
     * Words in the sentence, both correct and incorrect
     * @return words
     */
    public List<SwagCorrectWordInSentence> words { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'IncorrectCount' => 'incorrectCount',
        'Words' => 'words'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagCheckSentenceResponse() {
        words = new List<SwagCorrectWordInSentence>();
    }

    public static SwagCheckSentenceResponse getExample() {
        SwagCheckSentenceResponse checkSentenceResponse = new SwagCheckSentenceResponse();
        checkSentenceResponse.incorrectCount = 123;
        checkSentenceResponse.words = new List<SwagCorrectWordInSentence>{SwagCorrectWordInSentence.getExample()};
        return checkSentenceResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagCheckSentenceResponse) {
            SwagCheckSentenceResponse checkSentenceResponse = (SwagCheckSentenceResponse) obj;
            return this.incorrectCount == checkSentenceResponse.incorrectCount
                && this.words == checkSentenceResponse.words;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (incorrectCount == null ? 0 : System.hashCode(incorrectCount));
        hashCode = (17 * hashCode) + (words == null ? 0 : System.hashCode(words));
        return hashCode;
    }
}

